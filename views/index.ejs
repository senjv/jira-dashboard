<!DOCTYPE html>
<html>
<head>
    <title>Jira Issue Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="p-5">
<h1 class="mb-4">Jira Issue Dashboard</h1>

<form class="filter-panel" id="filterForm" onsubmit="return false;">
    <label><input type="checkbox" name="removeLow" <%= filters.removeLow ? 'checked' : '' %>> Remove Low Priority</label>
    <label><input type="checkbox" name="removeLowest" <%= filters.removeLowest ? 'checked' : '' %>> Remove Lowest Priority</label>
    <label><input type="checkbox" name="removeMedium" <%= filters.removeMedium ? 'checked' : '' %>> Remove Medium Priority</label>
    <label><input type="checkbox" name="removeOnHold" <%= filters.removeOnHold ? 'checked' : '' %>> Remove On Hold</label>
    <label><input type="checkbox" name="removeNotStarted" <%= filters.removeNotStarted ? 'checked' : '' %>> Remove Not Started</label>

    <button type="submit">Apply Filters</button>
    <button type="button" id="resetFilters" class="btn btn-secondary btn-sm">Reset Filters</button> <!-- ðŸ‘ˆ Reset button -->
</form>



<% if (criticalIssues.length > 0) { %>
    <h2 class="mt-5 text-danger">ðŸ”¥ Critical Issues (<%= criticalIssues.length %>)</h2>
    <table class="table table-bordered table-hover">
        <thead class="table-danger">
        <tr>
            <th>Key</th>
            <th>Summary</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Due Date</th>
        </tr>
        </thead>
        <tbody>
        <% criticalIssues.forEach(issue => { %>
            <% if (['Deployed', 'Done', 'Released', 'Cancelled', 'Closed', 'Done'].includes(issue.status)) return; %> <!-- ðŸ‘ˆ Skip deployed -->
            <tr data-priority="<%= issue.priority %>" data-status="<%= issue.status %>">
                <td><a href="https://yourdomain.atlassian.net/browse/<%= issue.key %>" target="_blank"><%= issue.key %></a></td>
                <td><%= issue.summary %></td>
                <td><%= issue.status %></td>
                <td><%= issue.priority %></td>
                <td><%= issue.dueDate ? issue.dueDate.toISOString().slice(0, 10) : "â€”" %></td>
            </tr>
        <% }) %>
        </tbody>
    </table>
<% } %>

<% Object.entries(categories).forEach(([category, issues]) => { %>
    <% if (issues.length > 0) { %>
        <h3 class="mt-4"><%= category %> (<%= issues.length %>)</h3>
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
            <tr>
                <th>Key</th>
                <th>Summary</th>
                <th>Status</th>
                <th>Priority</th>
                <th>Due Date</th>
            </tr>
            </thead>
            <tbody>
            <% issues.forEach(issue => { %>
                <% if (['Deployed', 'Done', 'Released', 'Cancelled', 'Closed', 'Done'].includes(issue.status)) return; %> <!-- ðŸ‘ˆ Skip deployed -->
                <tr data-priority="<%= issue.priority %>" data-status="<%= issue.status %>">
                    <td><a href="https://yourdomain.atlassian.net/browse/<%= issue.key %>" target="_blank"><%= issue.key %></a></td>
                    <td><%= issue.summary %></td>
                    <td><%= issue.status %></td>
                    <td><%= issue.priority %></td>
                    <td><%= issue.dueDate ? issue.dueDate.toISOString().slice(0, 10) : "â€”" %></td>
                </tr>
            <% }); %>
            </tbody>
        </table>
    <% } %>
<% }) %>

<script>
    const filterForm = document.getElementById('filterForm');
    const rows = document.querySelectorAll('tr[data-priority]');

    function applyFilters() {
        const removeLow = filterForm.removeLow.checked;
        const removeLowest = filterForm.removeLowest.checked;
        const removeMedium = filterForm.removeMedium.checked;
        const removeOnHold = filterForm.removeOnHold.checked;
        const removeNotStarted = filterForm.removeNotStarted.checked;

        rows.forEach(row => {
            const priority = row.getAttribute('data-priority');
            const status = row.getAttribute('data-status');
            let hide = false;

            if (removeLow && priority === 'Low') hide = true;
            if (removeLowest && priority === 'Lowest') hide = true;
            if (removeMedium && priority === 'Medium') hide = true;
            if (removeOnHold && status === 'On Hold') hide = true;
            if (removeNotStarted && status === 'Not Started') hide = true;

            row.style.display = hide ? 'none' : '';
        });
    }

    filterForm.addEventListener('change', applyFilters);

    document.getElementById('resetFilters').addEventListener('click', () => {
        // Uncheck all checkboxes
        filterForm.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = false);

        // Show all rows
        rows.forEach(row => row.style.display = '');

        // Optionally: trigger change if needed
        // applyFilters(); // Not needed since we manually show all
    });
</script>


</body>
</html>
